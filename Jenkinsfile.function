// Jenkinsfile
@Library('my-shared-library') _
//import sonarScanPipeline // Import the sonarScanPipeline script from the shared library

pipeline {
    agent any
    parameters {
        string(name: 'SONAR_PROJECT_KEY', defaultValue: 'petclinic', description: 'SonarQube project key')
        string(name: 'SONAR_PROJECT_NAME', defaultValue: 'petclinic', description: 'SonarQube project name')
        string(name: 'SONAR_HOST_URL', defaultValue: 'http://localhost:9000', description: 'SonarQube server URL')
        string(name: 'SONAR_TOKEN', defaultValue: '', description: 'SonarQube authentication token')
    }
    stages {
        stage('Checkout') {
            steps {
                // Checkout your source code from version control system
                // For example: git branch: 'main', url: 'https://github.com/your/repo.git'
                checkout scm
            }
        }
        stage('Build and SonarQube Scan') {
            steps {
                script {
                    // Call the sonarScanPipeline function with the provided parameters
                    sonarScanPipeline(
                        SONAR_PROJECT_KEY: params.SONAR_PROJECT_KEY,
                        SONAR_PROJECT_NAME: params.SONAR_PROJECT_NAME,
                        SONAR_HOST_URL: params.SONAR_HOST_URL,
                        SONAR_TOKEN: params.SONAR_TOKEN
                    )
                }
            }
        }
    }
}
